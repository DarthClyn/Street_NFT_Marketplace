{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshit Saini\\\\Downloads\\\\alchemynftstreet\\\\Street\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport { useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateFetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n  async function getNFTData(tokenId) {\n    try {\n      const ethers = require(\"ethers\");\n      let sumPrice = 0;\n\n      // After adding your Hardhat network to your MetaMask, this code will get providers and signers\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const addr = await signer.getAddress();\n      updateAddress(addr);\n\n      // Pull the deployed contract instance\n      let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n\n      // Create an NFT Token\n      let transaction = await contract.getMyNFTs();\n\n      // Filter the data based on the provided tokenId\n      transaction = transaction.filter(i => i.tokenId.toNumber() === Number(tokenId));\n\n      // Fetch metadata for each NFT\n      const items = await Promise.all(transaction.map(async i => {\n        const tokenURI = await contract.tokenURI(i.tokenId);\n        let meta = await axios.get(tokenURI);\n        meta = meta.data;\n        let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.image,\n          name: meta.name,\n          description: meta.description\n        };\n        sumPrice += Number(price) + 1;\n        return item;\n      }));\n      updateData(items);\n      updateFetched(true);\n      updateTotalPrice(sumPrice.toPrecision(3));\n    } catch (error) {\n      console.error(\"Error fetching NFT data:\", error);\n      // Handle the error, e.g., show an error message to the user\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileClass\",\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-center flex-col mt-11 md:text-2xl text-black\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row text-center justify-center mt-10 md:text-2xl text-black\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"No. of NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Total Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), totalPrice, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col text-center items-center mt-11 text-black\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold\",\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center flex-wrap max-w-screen-xl\",\n          children: data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(NFTTile, {\n              data: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 text-xl\",\n          children: data.length === 0 ? \"Oops, No NFT data to display \" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"k00rxvYHuN+WnDSPAVCbJgefZvw=\");\n_c = Profile;\n;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Navbar","useParams","MarketplaceJSON","axios","useState","NFTTile","React","useEffect","jsxDEV","_jsxDEV","Profile","_s","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","tokenId","ethers","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","addr","getAddress","contract","Contract","abi","transaction","getMyNFTs","filter","i","toNumber","Number","items","Promise","all","map","tokenURI","meta","get","price","utils","formatUnits","toString","item","seller","owner","image","name","description","toPrecision","error","console","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","length","value","index","_c","$RefreshReg$"],"sources":["C:/Users/Harshit Saini/Downloads/alchemynftstreet/Street/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport {  useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport React, { useEffect } from 'react';\nexport default function Profile () {\n    const [data, updateData] = useState([]);\n    const [dataFetched, updateFetched] = useState(false);\n    const [address, updateAddress] = useState(\"0x\");\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\n\n    async function getNFTData(tokenId) {\n        try {\n            const ethers = require(\"ethers\");\n            let sumPrice = 0;\n    \n            // After adding your Hardhat network to your MetaMask, this code will get providers and signers\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            const addr = await signer.getAddress();\n            updateAddress(addr);\n    \n            // Pull the deployed contract instance\n            let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer);\n    \n            // Create an NFT Token\n            let transaction = await contract.getMyNFTs();\n    \n            // Filter the data based on the provided tokenId\n            transaction = transaction.filter(i => i.tokenId.toNumber() === Number(tokenId));\n    \n            // Fetch metadata for each NFT\n            const items = await Promise.all(transaction.map(async i => {\n                const tokenURI = await contract.tokenURI(i.tokenId);\n                let meta = await axios.get(tokenURI);\n                meta = meta.data;\n    \n                let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n                let item = {\n                    price,\n                    tokenId: i.tokenId.toNumber(),\n                    seller: i.seller,\n                    owner: i.owner,\n                    image: meta.image,\n                    name: meta.name,\n                    description: meta.description,\n                };\n                sumPrice += Number(price)+1;\n                return item;\n            }));\n    \n            updateData(items);\n            updateFetched(true);\n            updateTotalPrice(sumPrice.toPrecision(3));\n        } catch (error) {\n            console.error(\"Error fetching NFT data:\", error);\n            // Handle the error, e.g., show an error message to the user\n        }\n    }\n    \n\n\n    return (\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\n            <Navbar></Navbar>\n            <div className=\"profileClass\">\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-black\">\n                <div className=\"mb-5\">\n                    <h2 className=\"font-bold\">Wallet Address</h2>  \n                    {address}\n                </div>\n            </div>\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-black\">\n                    <div>\n                        <h2 className=\"font-bold\">No. of NFTs</h2>\n                        {data.length}\n                    </div>\n                    <div className=\"ml-20\">\n                        <h2 className=\"font-bold\">Total Value</h2>\n                        {totalPrice} ETH\n                    </div>\n            </div>\n            <div className=\"flex flex-col text-center items-center mt-11 text-black\">\n                <h2 className=\"font-bold\">Your NFTs</h2>\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\n                    {data.map((value, index) => {\n                    return <NFTTile data={value} key={index}></NFTTile>;\n                    })}\n                </div>\n                <div className=\"mt-10 text-xl\">\n                    {data.length === 0 ? \"Oops, No NFT data to display \":\"\"}\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}